tests:
  - "can install titan":
      command: titan install
      wait: 10
      stdout:
        contains: Titan cli successfully installed, happy data versioning :)
  - "can clone hello-world/posrgres":
      command: titan clone s3web://demo.titan-data.io/hello-world/postgres hello-world
      stdout:
        contains:
          - Running controlled container hello-world
          - Starting container hello-world
  - "hello-world/postgres already exists":
      command: titan clone s3web://demo.titan-data.io/hello-world/postgres hello-world
      exitValue: 1
      stdout: repository 'hello-world' already exists
  - "can list hello-world/postgres":
      command: titan ls
      stdout: |-
        REPOSITORY            STATUS
        hello-world           running
  - "can get contents of hello-world/postgres":
      command: [docker, exec, hello-world, psql, postgres://postgres:postgres@localhost/postgres, -t, -c, SELECT * FROM messages;]
      stdout: Hello, World!
  - "can remove hello-world/postgres":
      command: titan rm -f hello-world
      stdout: |-
        Removing container hello-world
        hello-world removed
  - "can run mongo-test":
      command: titan run -- --name mongo-test -p 27017:27017 -d mongo:latest
      wait: 5
      stdout: |-
        Creating repository mongo-test
        Creating docker volume mongo-test/v0 with path /data/configdb
        Creating docker volume mongo-test/v1 with path /data/db
        Running controlled container mongo-test
  - "can insert mongo-test Ada Lovelace":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, 'db.employees.insert({firstName:"Ada",lastName:"Lovelace"})']
      stdout: |-
        WriteResult({ "nInserted" : 1 })
  - "can commit mongo-test":
      command: [titan, commit, -m, First Employee, mongo-test]
      stdout:
        contains: Commit
      env:
        set:
          - COMMIT_GUID:
              replace:
                find: "Commit "
                replace: ""
  - "can insert mongo-test Grace Hopper":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, 'db.employees.insert({firstName:"Grace",lastName:"Hopper"})']
      stdout: |-
        WriteResult({ "nInserted" : 1 })
  - "can select employees from mongo-test":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, 'db.employees.find()']
      stdout:
        contains:
          - '"firstName" : "Ada", "lastName" : "Lovelace"'
          - '"firstName" : "Grace", "lastName" : "Hopper"'
  - "can checkout commit mongo-test":
      command: [titan, checkout, --commit, $COMMIT_GUID, mongo-test]
      wait: 10
      stdout: |-
        Stopping container mongo-test
        Checkout $COMMIT_GUID
        Starting container mongo-test
        $COMMIT_GUID checked out
      env:
        get:
         - COMMIT_GUID
  - "mongo-test checkout was successful":
      command: [docker, exec, mongo-test, mongo, --quiet, --eval, 'db.employees.find()']
      stdout:
        excludes:
          - '"firstName" : "Grace", "lastName" : "Hopper"'
  - "can remove mongo-test":
      command: titan rm -f mongo-test
      stdout: |-
        Removing container mongo-test
        mongo-test removed
  - "can uninstall titan":
      command: titan uninstall
      stdout:
        contains: Uninstalled titan infrastructure
after:
  clearVars: true